
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8008;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # location / {
        #     root   html;
        #     index  index.html index.htm;
        # }

        location / {
            proxy_pass http://localhost:5173/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

            # Cho phép WebSocket (nếu Vite dev server dùng websocket hot reload)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /api/ {
            proxy_pass http://127.0.0.1:8001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Để tránh lỗi 404 với các đường dẫn swagger static
            proxy_redirect off;

            # Nếu bạn gặp lỗi WebSocket (optional)
            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
        }

        location /foody/ {
            proxy_pass https://www.foody.vn/da-nang/an-chay?;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Cho phép WebSocket (nếu Vite dev server dùng websocket hot reload)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_redirect off;
        }

        location ~ ^/foody/(.*)$ {
            # Tách path sau /foody/ để nối vào domain gốc
            set $target_path /$1;

            # Proxy đến foody.vn
            proxy_pass https://www.foody.vn$target_path$is_args$args;

            # Giữ nguyên headers và cookies
            proxy_set_header Host www.foody.vn;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_set_header X-Requested-With XMLHttpRequest;
            
            # Cho phép nhận cookies từ upstream
            proxy_pass_request_headers on;
            proxy_cookie_domain www.foody.vn localhost;

            # Bảo toàn HTTPS
            proxy_ssl_server_name on;
        }

        location /foody-api/ {
            # Chuyển route sang đúng path API gốc của Foody
            rewrite ^/foody-api/(.*)$ /api/delivery/$1 break;

            proxy_pass https://gappapi.deliverynow.vn;

            # Thêm các header cần thiết
            proxy_set_header accept "application/json, text/plain, */*";
            proxy_set_header accept-language "en-US,en;q=0.9,vi;q=0.8";
            proxy_set_header origin "https://www.foody.vn";
            proxy_set_header referer "https://www.foody.vn/";
            proxy_set_header user-agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0";
            proxy_set_header x-foody-access-token "dedffefbfd8a16a2e036ef0838cf10a4cde0e6513733b52e3cf313802b5d8afb4381cdc3f6dbbd712fc0b4ecdd6c3e45b50451dd188ae70c236cf248a5b72a21";
            proxy_set_header x-foody-api-version "1";
            proxy_set_header x-foody-app-type "1004";
            proxy_set_header x-foody-client-language "vi";
            proxy_set_header x-foody-client-type "1";
            proxy_set_header x-foody-client-version "1";

            # Bổ sung nếu thiếu
            proxy_pass_request_headers on;
            proxy_ssl_server_name on;

            # Bỏ giới hạn size nếu cần
            client_max_body_size 10M;
        }

        # Nếu muốn redirect /docs và /redoc ở root server
        location /docs {
            proxy_pass http://127.0.0.1:8001/docs;
            proxy_set_header Host $host;
        }

        location /redoc {
            proxy_pass http://127.0.0.1:8001/redoc;
            proxy_set_header Host $host;
        }

        # location = / {
        #     return 302 /app/;
        # }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
